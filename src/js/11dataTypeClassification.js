// lessons 11

"use strict"

let number = 4.6;  // можно как целые так и дробные числа, разделение через точку!

console.log(-4 / 0);    // -Infinity (-бесконечность)
console.log(4 / 0);    // Infinity (бесконечность)
console.log('string' * 9);   // NaN (англ. Not-a-Number, «не число»)

const persone = 'Alex';
const name1 = "Dimanа";
const Name2 = `Mishanu`;

// можно ставить оюбые скобки, `  ` -шаблонная строка (шаблонный литерал), у неё есть свои бонусы.
// При использовании шаблонных литералов выражения можно внедрять в строку с использованием местозаполнителей.
// Местозаполнитель представляет собой конструкцию вида ${}.

const party = `${persone} организовал вечеринку и пригласил ${name1} и ${Name2}`;
console.log(party);

// Создание многострочных строк с использованием шаблонных литералов выглядит гораздо проще и удобнее.
// Не нужно конкатенировать строки, не нужно использовать символ новой строки или обратную косую черту.

// const address =
//   'Homer J. Simpson' +             // использовался оператор конкатенации строк
//   '742 Evergreen Terrace' +
//   'Springfield'

// const address =
//   'Homer J. Simpson\               // символа обратной косой черты (\)
//   742 Evergreen Terrace\
//   Springfield'

// const address =
//   'Homer J. Simpson\n' +           // символ перевода строки (\n)
//   '742 Evergreen Terrace\n' +
//   'Springfield'

// const address = `Homer J. Simpson  // шаблонная строка
// 742 Evergreen Terrace
// Springfield`

/*
const bool = false; // булевое/булиновое (boolean) значение (да -true / (нет)false - логический тип данных!
console.log(somethung); // null - не можем сослаться на не существующий объект (ошибка ссылочного типа)
*/

let und;          // переменная без значения
console.log(und);  // undefined - неопределенный, объект есть, но его значение не определено.


const obj = {         // внутри объекта могут находиться любые типы данных
    name: "John",     //name - ключ, "John" - значение
    age: 25,
    isMarried: false
};                   //данные - свойства объекта и действия - методы

console.log(obj.name);    //обращаемся к переменной и значению её свойтсва через точку
console.log(obj["name"]); //обращаемся к переменной и значению её свойтсва через ["..."]
//Object - ключевая единица JS!

//№ по умолчанию 0          1        2       3       4    5 порядковый номер как бы ключ на который мы не может повлиять
let arr = ['plum.png', 'orange.jpg', 6, 'apple.bmp', {}, []];  //получаем как бы пару ключ - значение
// массив может содержать любой тип данных,
// так же является частым случаем объекта,
// данные идут строго по порядку
console.log(arr[1]); // обращаемся к элементу по индексу (порядковому номеру) начиная с 0





